Collections

Sequences


Generic ops?
Content tests
Capabilities?
Type tests

Creating seq

Extract item
Construct coll
Pass to fn?
Search?
=========================================================================================


Type tests: isa is_iter is_list is_mapping is_seq is_seqcoll is_seqcont is_set is_tuple iterable
Content tests: all any all_fn any_fn is_distinct none none_fn some some_fn one one_fn
Create func: identity constantly caller iffy re_tester re_finder
Manipulate func: autocurry rpartial rcurry complement curry flip func_partial partial
Join funcs: compose all_fn any_fn none_fn some_fn one_fn juxt ijust iffy

Make coll: empty
Access coll: iteritems itervalues
Join colls: join join_with merge merge_with
Compact coll: compact project select select_keys select_values
Transform coll: walk walk_keys walk_values flip

Generate seq: count cycle iterate repeat repeatedly
Access seq: first second last nth
Slice seq: butlast drop dropwhile rest
Join seqs: cat chain concat flatten icat iconcat iflatten mapcat imapcat interleave interpose
Split seq: split isplit split_at isplit_at split_by isplit_by
Chunk seq: groupby chunks ichunks partition ipartition partition_by ipartition_by pairwise
Aggregate seq: count_by group_by group_by_keys ilen reductions ireductions sums isums
Shorten seq: distinct dropwhile takewhile filter idistinct ifilter keep ikeep remove iremove
             without iwithout
Process seq: keep ikeep map imap mapcat imapcat invoke reductions ireductions sums isums
             pluck
Search: filter first ifilter some

Calculations: cache cached_property make_lookuper silent_lookuper memoize
Strings: cut_prefix cut_suffix str_join
RE: re_all re_find re_finder re_iter re_test re_tester
Decorators: decorator isnone
Objects: monkey cached_property namespace
Error flow: silent ignore raiser retry fallback limit_error_rate
Control flow: once once_per once_per_args
Debug: tap log_calls log_enters log_exits log_errors log_durations
       print_calls print_enters print_exits print_errors print_durations
Primitives: inc dec even odd isnone notnone

Process together: zip izip izip_dicts izip_values pairwise
Coll to seq: iteritems itervalues izip_dicts izip_values


sums
suppress
take
takewhile
tap
unwrap
walk
walk_keys
walk_values
where
with_next
with_prev
without
wraps
zipdict
ContextDecorator

contextmanager
joining
collecting
post_processing
